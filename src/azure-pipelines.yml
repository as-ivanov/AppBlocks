
pool:
  vmImage: 'windows-latest'

variables:
  AzurePipelines: true
  BuildConfiguration: 'Release'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

steps:
- task: DotNetCoreInstaller@1
  inputs:
    version: '3.1.100'

- task: NuGetToolInstaller@1
  inputs:
    checkLatest: true

- task: UseDotNet@2
  displayName: "Use dotnet sdk 3.x"
  inputs:
    version: 3.x
    includePreviewVersions: false

- script: |
    dotnet tool install --tool-path . nbgv
    .\nbgv cloud
  displayName: Install NerdBank.GitVersioning

- task: DotNetCoreCLI@2
  displayName: Restore NuGet packages
  inputs:
    command: restore
    verbosityRestore: Detailed
    projects: "src/*.sln"

- task: DotNetCoreCLI@2
  displayName: Build solution
  inputs:
    command: build
    arguments: --no-restore -c $(BuildConfiguration)
    projects: "src/*.sln"

- task: DotNetCoreCLI@2
  displayName: Run tests
  inputs:
    command: test
    arguments: --no-build -c $(BuildConfiguration)
    projects: "src/*.sln"

- task: NuGetCommand@2
  displayName: Pack solution
  inputs:
    command: 'pack'
    packagesToPack: 'src/**/*.csproj'
    packDestination: '$(Build.ArtifactStagingDirectory)'
#- task: NuGetAuthenticate@0
#  displayName: 'NuGet Authenticate'
#  inputs:
#    nuGetServiceConnections: 'NugetCodeGenerationConnection'
- task: NuGetCommand@2
  displayName: Publish to NuGet
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    nuGetFeedType: external
